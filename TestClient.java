/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multiple;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.Socket;
import java.sql.DriverManager;
import static java.sql.JDBCType.NULL;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Divyani
 */
public class TestClient extends javax.swing.JFrame {

    /**
     * Creates new form TestClient
     */
     public Connection cn;
    public Statement st;
    public String client="";
    public int flag=0;
    public TestClient() {
        initComponents();
       
    }
  
    public TestClient(String clientname) {
        initComponents();
        c1.setText(clientname);
         c2.setText(clientname);
        flag=1;
        client=clientname;
        // Inbox load
             inbox.setEditable( false );
             inbox.setText("");
         try
        {
            //Name of the driver
            Class.forName("com.mysql.jdbc.Driver");
            //Database Url from jdbc proprties
            cn=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/is?zeroDateTimeBehavior=convertToNull","root","root");
            st=(Statement) cn.createStatement();
            JOptionPane.showMessageDialog(null,"Connected");
            String mailFrom;
            String msg;
            String complete="";
            // Select query
            String sql="select * from mails where mailTo = '"+clientname+"'";
             try {
            ResultSet rs=st.executeQuery(sql);
             while (rs.next())
             {
                 mailFrom= rs.getString(3);
                 msg=rs.getString(4);
    //value += val + " ";
   // online.setText(val+"\n");
            // In append Mode   
              complete=complete+"From : "+mailFrom+"\nMessage : "+msg+"\n";
           }
             inbox.setText(complete);
            
        } catch (SQLException ex) {
            // Exception
              JOptionPane.showMessageDialog(null,"Exception Occured\nPlease Check!!!");
            //Logger.getLogger(TestServer.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
        }catch (Exception ex) {
            
             JOptionPane.showMessageDialog(null,"Unable to connect to Database");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        c1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inbox = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        mailTo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mailmsg = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        onlineClient = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("WELCOME");

        c1.setText("Client Name");

        jLabel3.setText("MAIL CLIENT");

        jLabel4.setText("Inbox");

        jButton1.setText("Refresh InBox");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        inbox.setColumns(20);
        inbox.setRows(5);
        jScrollPane1.setViewportView(inbox);

        jLabel5.setText("To : ");

        mailTo.setToolTipText("");
        mailTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailToActionPerformed(evt);
            }
        });

        jLabel6.setText("From : ");

        c2.setText("Client Name");

        jLabel8.setText("Message :");

        mailmsg.setColumns(20);
        mailmsg.setRows(5);
        jScrollPane2.setViewportView(mailmsg);

        jButton2.setText("SEND MAIL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Online Client Message : ");

        onlineClient.setColumns(20);
        onlineClient.setRows(5);
        jScrollPane3.setViewportView(onlineClient);

        jButton3.setText("LOGOUT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(c1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(105, 105, 105)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(31, 31, 31)
                                    .addComponent(mailTo, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(c2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton3))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(c1)
                    .addComponent(jLabel4)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(mailTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(c2))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //Refresh
        inbox.setText("");
          String mailFrom;
            String msg;
            String complete="";
            // Select query
            String sql="select * from mails where mailTo = '"+client+"'";
             try {
            ResultSet rs=st.executeQuery(sql);
             while (rs.next())
             {
                 mailFrom= rs.getString(3);
                 msg=rs.getString(4);
    //value += val + " ";
   // online.setText(val+"\n");
            // In append Mode   
              complete=complete+"From : "+mailFrom+"\nMessage : "+msg+"\n";
           }
             inbox.setText(complete);
            
        } catch (SQLException ex) {
            // Exception
              JOptionPane.showMessageDialog(null,"Exception Occured\nPlease Check!!!");
            //Logger.getLogger(TestServer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                                        

    private void mailToActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //send Mail
        String msg1="";
        String ToMail="";
                ToMail=mailTo.getText();
        if(ToMail.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"To header cannot be empty\n");
            
        }
        else
        {
            msg1=mailmsg.getText();
         String sql="INSERT INTO `mails` (`mailTo`, `mailFrom`, `message`) VALUES ('"+ToMail+"', '"+client+"', '"+msg1+"')";
            // mail send
            try
            {
                 int rss1 = st.executeUpdate(sql);
                // Database Insert 
                 JOptionPane.showMessageDialog(null,"Email send Successfully\n");
                
                
            }
            catch(Exception e)
            {
                 JOptionPane.showMessageDialog(null,"Sending Mail Error\n");
                
            }
            
            
        }
        //email server data send socket
        //socket 
        try
        {
        Socket sk=new Socket("127.0.0.1",5000);
		//BufferedReader sin=new BufferedReader(new InputStreamReader(sk.getInputStream()));
		PrintStream sout=new PrintStream(sk.getOutputStream());
		//BufferedReader stdin=new BufferedReader(new InputStreamReader(System.in));
	String from=client;
                String s;
                s=mailmsg.getText();
                //from client
                // to 
                 //sout.println(from);
                sout.println(from+" : "+s);
                 sk.close();
		//sin.close();
		 sout.close();
             //stdin.close();
	
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null,"Socket Exception Occured\n");
                
        }
        mailmsg.setText("");
                 mailTo.setText("");
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        //logout
         //JOptionPane.showMessageDialog(null,client);
                
        String sql="update login set status = '0' where Email ='"+client+"'";
        try
        {
          int rss1 = st.executeUpdate(sql);
           JOptionPane.showMessageDialog(null,"LogOut Success\n");
           this.dispose();
                
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null,"Logout Error\n");
                
            
        }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestClient().setVisible(true);
            }
        });
        
        
        
		/*Socket sk=new Socket("127.0.0.1",5000);
		BufferedReader sin=new BufferedReader(new InputStreamReader(sk.getInputStream()));
		PrintStream sout=new PrintStream(sk.getOutputStream());
		BufferedReader stdin=new BufferedReader(new InputStreamReader(System.in));
		String s;
		while (  true )
		{
                    //Send Mail
			//System.out.print("Client : ");
			//s=stdin.readLine();
			//sout.println(s);
                        if ( s.equalsIgnoreCase("BYE") )
                        {
                           System.out.println("Connection ended by client");
 			   break;
                        }
			s=sin.readLine();
			System.out.print("Server : "+s+"\n");
  			
		}
		 sk.close();
		 sin.close();
		 sout.close();
 		stdin.close();
	**/
    
   
        
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    private javax.swing.JTextArea inbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField mailTo;
    private javax.swing.JTextArea mailmsg;
    private javax.swing.JTextArea onlineClient;
    // End of variables declaration                   
}
